<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="a7eff4c6-a99e-4318-8830-1420c08c731a" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/.github/workflows/build-image.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/deploy/nginx.conf" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/components/EventsLogCharts.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/components/EventsLogRow.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/doc-editors/__tests__/EdgeFunctionsEditor.spec.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/views/EdgeFunctionsList.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/views/EventsLog.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/views/PremiumPage.vue" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.eslintrc.js" beforeDir="false" afterPath="$PROJECT_DIR$/.eslintrc.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.github/workflows/deploy-to-gcs.yaml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/package-lock.json" beforeDir="false" afterPath="$PROJECT_DIR$/package-lock.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/assets/DatasetsUtils.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/assets/DatasetsUtils.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/assets/DateTimeUtils.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/assets/DateTimeUtils.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/assets/Utils.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/assets/Utils.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/assets/styles/colors.scss" beforeDir="false" afterPath="$PROJECT_DIR$/src/assets/styles/colors.scss" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/assets/styles/main.scss" beforeDir="false" afterPath="$PROJECT_DIR$/src/assets/styles/main.scss" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/EntriesRelationList.vue" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/EntriesRelationList.vue" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/LabeledTags.vue" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/LabeledTags.vue" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/QuarantinedList.vue" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/QuarantinedList.vue" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/RbzChart.vue" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/RbzChart.vue" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/RbzTable.vue" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/RbzTable.vue" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/SideMenu.vue" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/SideMenu.vue" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/TagAutocompleteInput.vue" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/TagAutocompleteInput.vue" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/doc-editors/ACLEditor.vue" beforeDir="false" afterPath="$PROJECT_DIR$/src/doc-editors/ACLEditor.vue" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/doc-editors/BackendServicesEditor.vue" beforeDir="false" afterPath="$PROJECT_DIR$/src/doc-editors/BackendServicesEditor.vue" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/doc-editors/ContentFilterProfilesEditor.vue" beforeDir="false" afterPath="$PROJECT_DIR$/src/doc-editors/ContentFilterProfilesEditor.vue" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/doc-editors/ContentFilterRulesEditor.vue" beforeDir="false" afterPath="$PROJECT_DIR$/src/doc-editors/ContentFilterRulesEditor.vue" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/doc-editors/CustomResponsesEditor.vue" beforeDir="false" afterPath="$PROJECT_DIR$/src/doc-editors/CustomResponsesEditor.vue" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/doc-editors/DynamicRulesEditor.vue" beforeDir="false" afterPath="$PROJECT_DIR$/src/doc-editors/DynamicRulesEditor.vue" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/doc-editors/EdgeFunctionsEditor.vue" beforeDir="false" afterPath="$PROJECT_DIR$/src/doc-editors/EdgeFunctionsEditor.vue" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/doc-editors/FlowControlPoliciesEditor.vue" beforeDir="false" afterPath="$PROJECT_DIR$/src/doc-editors/FlowControlPoliciesEditor.vue" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/doc-editors/GlobalFiltersEditor.vue" beforeDir="false" afterPath="$PROJECT_DIR$/src/doc-editors/GlobalFiltersEditor.vue" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/doc-editors/MobileSDKsEditor.vue" beforeDir="false" afterPath="$PROJECT_DIR$/src/doc-editors/MobileSDKsEditor.vue" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/doc-editors/ProxyTemplatesEditor.vue" beforeDir="false" afterPath="$PROJECT_DIR$/src/doc-editors/ProxyTemplatesEditor.vue" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/doc-editors/RateLimitRulesEditor.vue" beforeDir="false" afterPath="$PROJECT_DIR$/src/doc-editors/RateLimitRulesEditor.vue" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/doc-editors/RoutingProfilesEditor.vue" beforeDir="false" afterPath="$PROJECT_DIR$/src/doc-editors/RoutingProfilesEditor.vue" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/doc-editors/SecurityPoliciesEditor.vue" beforeDir="false" afterPath="$PROJECT_DIR$/src/doc-editors/SecurityPoliciesEditor.vue" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/doc-editors/ServerGroupsEditor.vue" beforeDir="false" afterPath="$PROJECT_DIR$/src/doc-editors/ServerGroupsEditor.vue" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/doc-editors/__tests__/CloudFunctionsEditor.spec.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/doc-editors/__tests__/ContentFilterProfileEditor.spec.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/doc-editors/__tests__/ContentFilterProfilesEditor.spec.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/doc-editors/__tests__/DynamicRulesEditor.spec.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/doc-editors/__tests__/DynamicRulesEditor.spec.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/doc-editors/popups/GenerateCertificate.vue" beforeDir="false" afterPath="$PROJECT_DIR$/src/doc-editors/popups/GenerateCertificate.vue" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/reblaze-dashboards/DefaultDashboard.vue" beforeDir="false" afterPath="$PROJECT_DIR$/src/reblaze-dashboards/DefaultDashboard.vue" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/router/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/router/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/types/const.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/types/const.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/types/index.d.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/types/index.d.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/views/Dashboards.vue" beforeDir="false" afterPath="$PROJECT_DIR$/src/views/Dashboards.vue" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/views/DocumentEditor.vue" beforeDir="false" afterPath="$PROJECT_DIR$/src/views/DocumentEditor.vue" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/views/DocumentList.vue" beforeDir="false" afterPath="$PROJECT_DIR$/src/views/DocumentList.vue" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/views/DynamicRulesList.vue" beforeDir="false" afterPath="$PROJECT_DIR$/src/views/DynamicRulesList.vue" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/views/MainComponent.vue" beforeDir="false" afterPath="$PROJECT_DIR$/src/views/MainComponent.vue" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/views/MobileSDKsList.vue" beforeDir="false" afterPath="$PROJECT_DIR$/src/views/MobileSDKsList.vue" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2Hd92LbRltLfDeanKPZoi6geZDz" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;last_opened_file_path&quot;: &quot;/Users/avihay/Reblaze/ui&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.stylelint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.stylelint&quot;: &quot;/Users/avihay/Reblaze/ui/node_modules/stylelint&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;ts.external.directory.path&quot;: &quot;/Users/avihay/Reblaze/ui/node_modules/typescript/lib&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="a7eff4c6-a99e-4318-8830-1420c08c731a" name="Changes" comment="" />
      <created>1668603885062</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1668603885062</updated>
      <workItem from="1668603886696" duration="2950000" />
      <workItem from="1668667462979" duration="492000" />
      <workItem from="1669540342278" duration="718000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>